{"version":3,"sources":["components/MovieComponent.js","Constants.js","components/MovieInfoComponent.js","App.js","reportWebVitals.js","index.js"],"names":["MovieContainer","styled","div","CoverImage","img","MovieName","span","InfoColumn","MovieInfo","MovieComponent","props","movie","Title","Year","imdbID","Type","Poster","onClick","onMovieSelect","src","API_KEY","Container","Close","MovieInfoComponent","selectedMovie","useState","movieInfo","setMovieInfo","useEffect","axios","get","Constants","then","response","data","imdbRating","Language","Rated","Released","Runtime","Genre","Director","Actors","Plot","Header","AppName","MovieImage","SearchBox","SearchIcon","SearchInput","input","MovieListContainer","Placeholder","App","searchQuery","updateSearchQuery","timeOutId","updateTimeoutId","movieList","updateMovieList","updateSelectedMovie","fetchData","searchString","a","Search","selected","placeholder","value","onChange","event","clearTimeout","target","timeOut","setTimeout","length","map","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3125a9fe.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst MovieContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 10px;\r\n    width: 280px;\r\n    box-shadow: 0 3px 10px 0 #aaa;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst CoverImage = styled.img`\r\n    object-fit: cover;\r\n    height: 362px;\r\n`;\r\n\r\nconst MovieName = styled.span`\r\n    fomt-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    margin: 15px 0;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst InfoColumn = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst MovieInfo = styled.span`\r\n    fomt-size: 16px;\r\n    font-weight: 500;\r\n    color: black;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    text-transform: capitalize;\r\n`;\r\n\r\nfunction MovieComponent(props) {\r\n    const { Title, Year, imdbID, Type, Poster } = props.movie;\r\n    return (\r\n        <MovieContainer onClick={() => props.onMovieSelect(imdbID)}>\r\n            <CoverImage src={Poster} />\r\n            <MovieName>{Title}</MovieName>\r\n            <InfoColumn>\r\n                <MovieInfo>Year: {Year}</MovieInfo>\r\n                <MovieInfo>Type: {Type}</MovieInfo>\r\n            </InfoColumn>\r\n        </MovieContainer>\r\n    )\r\n}\r\n\r\nexport default MovieComponent\r\n","export const API_KEY = \"6cb5427b\";","import axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { useState, useEffect } from \"react\";\r\nimport * as Constants from '../Constants';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    padding: 20px 30px;\r\n    justify-content: center;\r\n    border-bottom: 1px solid lightgray;\r\n`;\r\n\r\nconst CoverImage = styled.img`\r\n    object-fit: cover;\r\n    height: 352px;\r\n`;\r\n\r\nconst MovieName = styled.span`\r\n    fomt-size: 18px;\r\n    font-weight: 600;\r\n    color: black;\r\n    margin: 15px 0;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst InfoColumn = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 20px;\r\n`;\r\n\r\nconst MovieInfo = styled.span`\r\n    fomt-size: 16px;\r\n    font-weight: 500;\r\n    color: black;\r\n    overflow: hidden;\r\n    margin: 4px 0;\r\n    text-transform: capitalize;\r\n    text-overflow: ellipsis;\r\n    & span {\r\n        opacity: 0.5;\r\n    }\r\n`;\r\n\r\nconst Close = styled.span`\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    color: black;\r\n    background: lightgray;\r\n    height: fit-content;\r\n    padding: 5px 10px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    opacity: 0.8;\r\n`;\r\n\r\nconst MovieInfoComponent = (props) => {\r\n    const { selectedMovie } = props;\r\n    const [movieInfo, setMovieInfo] = useState();\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`https://www.omdbapi.com/?i=${selectedMovie}&apiKey=${Constants.API_KEY}`)\r\n            .then((response) => {\r\n                setMovieInfo(response.data);\r\n            });\r\n    }, [selectedMovie]);\r\n\r\n    return (\r\n        <Container>\r\n            {movieInfo ? <>\r\n                <CoverImage src={movieInfo?.Poster} />\r\n                <InfoColumn>\r\n                    <MovieName>Movie: {movieInfo?.Title}</MovieName>\r\n                    <MovieInfo>IMDB Rating : <span>{movieInfo?.imdbRating}</span></MovieInfo>\r\n                    <MovieInfo>Language : <span>{movieInfo?.Language}</span></MovieInfo>\r\n                    <MovieInfo>Rated : <span>{movieInfo?.Rated}</span></MovieInfo>\r\n                    <MovieInfo>Released : <span>{movieInfo?.Released}</span></MovieInfo>\r\n                    <MovieInfo>Runtime : <span>{movieInfo?.Runtime}</span></MovieInfo>\r\n                    <MovieInfo>Genre : <span>{movieInfo?.Genre}</span></MovieInfo>\r\n                    <MovieInfo>Director : <span>{movieInfo?.Director}</span></MovieInfo>\r\n                    <MovieInfo>Actors : <span>{movieInfo?.Actors}</span></MovieInfo>\r\n                    <MovieInfo>Plot : <span>{movieInfo?.Plot}</span></MovieInfo>\r\n                </InfoColumn>\r\n                <Close onClick={()=> props.onMovieSelect()}>x</Close>\r\n            </> : \"Loading...\"}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MovieInfoComponent;","import styled from 'styled-components';\r\nimport MovieComponent from './components/MovieComponent';\r\nimport MovieInfoComponent from './components/MovieInfoComponent';\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { API_KEY } from './Constants';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  background-color: black;\r\n  color: white;\r\n  padding: 10px;\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n  box-shadow: 0 3px 6px 0 #555;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst AppName = styled.div`\r\n  display: flex;\r\n  flex-directions: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst MovieImage = styled.img`\r\n  width: 48px;\r\n  height: 48px;\r\n  margin: 15px;\r\n`;\r\n\r\nconst SearchBox = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 10px 10px;\r\n  background-color: white;\r\n  width:50%;\r\n  border-radius: 6px;\r\n  align-items: center;\r\n`;\r\n\r\nconst SearchIcon = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  color: black;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  border: none;\r\n  outline: none;\r\n  margin-left: 15px;\r\n`;\r\n\r\nconst MovieListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  padding: 30px;\r\n  gap: 24px;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst Placeholder = styled.img`\r\n  width: 120px;\r\n  height: 120px;\r\n  margin: 150px;\r\n  opacity: 50%;\r\n`;\r\n\r\nconst App = () => {\r\n  const [searchQuery, updateSearchQuery] = useState();\r\n  const [timeOutId, updateTimeoutId] = useState();\r\n  const [movieList, updateMovieList] = useState();\r\n  const [selectedMovie, updateSelectedMovie] = useState();\r\n\r\n  const fetchData = async (searchString) => {\r\n    const response = await axios.get(`https://www.omdbapi.com/?s=${searchString}&apiKey=${API_KEY}`);\r\n    updateMovieList(response.data.Search);\r\n  };\r\n\r\n  const onTextChange = (event) => {\r\n    clearTimeout(timeOutId);\r\n    updateSearchQuery(event.target.value);\r\n    const timeOut = setTimeout(() => { fetchData(event.target.value) }, 500);\r\n    updateTimeoutId(timeOut);\r\n  };\r\n\r\n  const onMovieSelect = (selected) => {\r\n    updateSelectedMovie(selected);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <AppName>\r\n          <MovieImage src=\"/movie-app/images/movie-icon.svg\" />\r\n          Movies App\r\n        </AppName>\r\n        <SearchBox>\r\n          <SearchIcon src=\"/react_js_movie_app/images/search-icon.svg\" />\r\n          <SearchInput\r\n            placeholder=\"Search Movie\"\r\n            value={searchQuery}\r\n            onChange={onTextChange}\r\n          />\r\n        </SearchBox>\r\n      </Header>\r\n\r\n      {selectedMovie && <MovieInfoComponent selectedMovie={selectedMovie}\r\n        onMovieSelect={onMovieSelect} />}\r\n\r\n      <MovieListContainer>\r\n        {movieList?.length ? movieList.map((movie, index) =>\r\n          <MovieComponent\r\n            key={index}\r\n            movie={movie}\r\n            onMovieSelect={onMovieSelect} />)\r\n          : (\r\n            <Placeholder src=\"/react_js_movie_app/images/movie-icon.svg\" />\r\n          )}\r\n      </MovieListContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}